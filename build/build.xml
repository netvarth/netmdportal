<project name="youNeverWait" default="all">
  
  <description>
  	weblims version 1.0
  </description>

  <property environment="env"/>
	
  <!-- Enable access to Properties file  -->
  <property file="build.properties" />
	
  <property name="db.create.value" value="true"/>	
  <!-- Set to use JDK 1.6 -->
  <property name="build.compiler" value="javac1.6"/>
  <property name="servlet.jar" location="${nv.app.server.dir}/lib/servlet-api.jar"/>
	
  <!-- My Libraries -->
  <fileset id="webinf.lib.files" dir="${lib.dir}">
	<include name="**/*.jar"/>
  </fileset>
	
  <path id="webinf.classpath">
 	<fileset refid="webinf.lib.files"/>
  </path>

  <path id="project.class.path">
    <pathelement location="${servlet.jar}"/>
  	<path refid="webinf.classpath"/>
  </path>
	
  <!-- Deployment Properties -->
  <property name="deploy.dir" location="${nv.deploy.dir}"/>
  
  <property name="config.dir" location="${nv.conf.dir}"/>

  <target name="clean"  description="clean up" >
    <!-- Delete the ${build.dir} and ${dist.dir} directory trees-->
  	<echo>deleting the files</echo>
  	<delete dir="${temp.build.dir}"/>
    <delete dir="${dist.dir}"/>
  </target>

  <target name="init"  depends="clean" description="init">
  	<echo>creating new folder</echo>
    <mkdir dir="${temp.build.dir}"/>
  </target>
	
  <target name="compile" depends="init" description="compile the source " >
    
  	<!-- Compile the java code from ${src.dir} into ${build.dir} -->
    
  	<javac srcdir="${src.dir}" destdir="${temp.build.dir}" debug="on">
	    <exclude  name="**/test/*.*" /> 
    	<classpath>
	  	<path refid="project.class.path"/>
       </classpath>
    </javac>
  	
  	 <copy todir="${temp.build.dir}">
  			      <fileset dir="${resource.dir}">    	
  			      	<exclude name="*-servlet.xml"/>
  			      	<exclude name="web.xml"/>
  			        <exclude name="jboss-deployment-structure.xml"/>
  			      	
  			      	<include name="**/*.*" />
  		  	  	  </fileset>
  	 			  	
  	 			 <fileset dir="${src.dir}">
  	 			        <include name="**/*.hbm.xml"/>
  	 			      	<include name="**/*.xml"/>
  	 			        <include name="**/*.properties"/>  	 			   	
  	 			 </fileset>
  	 	 	 
  	 </copy>
  </target>
	
	<target name="testApplication" depends="compile">
	 
		 	
	   <junit printsummary="yes" haltonfailure="no">
		  	      <classpath>
		  	            <pathelement location="${temp.build.dir}"/>
		  	      	    <pathelement location="${resource.dir}/spring}"/>
		  	            <path refid="project.class.path"/>
		  	      </classpath>
	           	
				  <batchtest fork="no" todir="${reports.tests}">
				    <fileset dir="${src.dir}">
				      <include name="**/test/*Test*.java"/>
				    </fileset>
				  	<formatter type="xml"/>
				   </batchtest>
	   </junit>	
		
	</target>	
  <target name="dist" depends="testApplication" description="generate the distribution" >
   
    <!-- Put everything in ${build} into the war file -->
  
  	<mkdir dir="${dist.dir}"/>
  	  		 	
  	 <!-- Create the lib  directory for application created jar files like hibernate mapping jar file etc -->
  	
 	<war destfile="${dist.dir}/${ant.project.name}.war" webxml="${resource.dir}/web.xml">
 	    <fileset dir="${web.dir}" excludes ="**/WEB-INF/**" />
 		<webinf dir="${resource.dir}">
 		  	    <include name="*-servlet.xml"/>
 			    <include name="jboss-deployment-structure.xml"/>
 		</webinf>	
 		<lib dir="${lib.dir}/commons"/>
 		<lib dir="${lib.dir}/jee">
 			 <include name="**/log4j*.jar"/>
 		</lib>	
 		<lib dir="${lib.dir}/amazon"/>
 		<lib dir="${lib.dir}/other"/>
 		<lib dir="${lib.dir}/spring"/>
 		<lib dir="${lib.dir}/hibernate"/>
  		<lib dir="${lib.dir}/jdbc"/>
 		<lib dir="${lib.dir}/framework"/>
	    <classes dir="${temp.build.dir}"/>
    </war>
  </target>
	
	<!-- Create the  install folder structure -->    
 	
  <!-- Deploy the application by copying it to new folder structure created and the deployment directory of Server -->
  <target name="deploy" depends="dist"	description="deploy to server" >
  	<!-- copying War file to deployment directory of Server -->
  	<copy file="${resource.dir}/context_${build.env.name}.properties" 
  	  		  tofile="${nv.conf.dir}/youNeverWait.properties"/>
  	<copy file="${dist.dir}/${ant.project.name}.war" todir="${nv.deploy.dir}"/>
  </target>
  <target name="all" depends="clean,deploy"> 
	    <delete dir="${temp.build.dir}"/>
	    <delete dir="${dist.dir}"/>
  </target>
	
</project>